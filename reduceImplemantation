function reduceImplement(callback, initialValue) {
  return function reducing(array) {
    let accumulator;
    if (initialValue === undefined) {
      accumulator = array[0];
    } else {
      accumulator = initialValue;
    }
    
    for (let i = initialValue !== undefined ? 0 : 1; i < array.length; i++) {
      accumulator = callback(accumulator, array[i], i, array);
    }
    
    return accumulator;
  };
}

Array.prototype.reduceImplement = function(callback,initilaValue){
 return reduceImplement(callback,initilaValue)(this)
}

let newArr = [1,2,3,4,5]
const sum = newArr.reduceImplement((accumulator,currentValue)=>{
  return accumulator + currentValue
},0)

console.log(sum)
